{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "General Domain",
    "description" : "This is the general domain to store reusable components common to all APIs (cross-layers)",
    "version" : "1.4.1"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/BDPDEV/General_Domain/1.4.1",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "paths" : { },
  "components" : {
    "schemas" : {
      "amount" : {
        "type" : "object",
        "required" : [ "quantity", "type" ],
        "description" : "object schema representing the amount of a certain instance (e.g. 100 units of an instrument)",
        "properties" : {
          "quantity" : {
            "$ref" : "#/components/schemas/quantity"
          },
          "type" : {
            "$ref" : "#/components/schemas/numberType"
          }
        }
      },
      "value" : {
        "type" : "object",
        "required" : [ "amounts", "currency", "type" ],
        "description" : "object schema representing the value of a certain instance",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/valueType"
          },
          "amounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/amount"
            }
          },
          "currency" : {
            "$ref" : "#/components/schemas/currencyCode"
          }
        }
      },
      "indicator" : {
        "type" : "object",
        "required" : [ "amount", "name", "period" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "Variation", "Risk", "Volatility", "Ongoing Charge", "Score", "Ratio", "Exchange Rate" ],
            "example" : "Variation"
          },
          "amount" : {
            "$ref" : "#/components/schemas/amount"
          },
          "period" : {
            "$ref" : "#/components/schemas/period"
          },
          "currency" : {
            "$ref" : "#/components/schemas/currencyCode"
          }
        }
      },
      "signature_Get" : {
        "type" : "object",
        "description" : "A signature is an entity composed of an envelope containing the instance to sign along with values to generate or approve the signature. This data model represents the entities returned while getting the content of the signature",
        "properties" : {
          "envelope" : {
            "$ref" : "#/components/schemas/envelopeEncoded"
          },
          "envelopeHash" : {
            "$ref" : "#/components/schemas/envelopeHash"
          },
          "requiredAuthenticationMode" : {
            "$ref" : "#/components/schemas/requiredAuthenticationMode"
          },
          "challenges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/challenge"
            },
            "minItems" : 1,
            "maxItems" : 3
          }
        }
      },
      "signature_Post" : {
        "type" : "object",
        "description" : "A signature is an entity composed of an envelope containing the instance to sign along with values to generate or approve the signature. This data model represents the entities posted while signing the content of the signature",
        "properties" : {
          "envelope" : {
            "$ref" : "#/components/schemas/envelopeEncoded"
          },
          "envelopeHash" : {
            "$ref" : "#/components/schemas/envelopeHash"
          },
          "requiredAuthenticationMode" : {
            "$ref" : "#/components/schemas/requiredAuthenticationMode"
          },
          "challenges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/challenge"
            },
            "minItems" : 1,
            "maxItems" : 3
          },
          "response" : {
            "$ref" : "#/components/schemas/signatureCode"
          }
        }
      },
      "challenge" : {
        "type" : "object",
        "required" : [ "name", "value" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the challenge used for the signature",
            "enum" : [ "ChallengeCode1", "ChallengeCode2", "ChallengeCode3" ],
            "example" : "ChallengeCode1"
          },
          "value" : {
            "type" : "string",
            "description" : "Value of the challenge used for the signature",
            "example" : "0075470"
          }
        }
      },
      "period" : {
        "type" : "string",
        "enum" : [ "Year-to-date", "Annual", "Bi-annual", "Quarterly", "Monthly", "Bi-weekly", "Weekly", "Daily", "Not applicable" ],
        "example" : "Year-to-date"
      },
      "valueType" : {
        "type" : "string",
        "enum" : [ "Net Asset Value" ],
        "example" : "Net Asset Value"
      },
      "quantity" : {
        "type" : "number",
        "format" : "double",
        "description" : "Amount number value",
        "example" : 65
      },
      "amountPct" : {
        "type" : "number",
        "format" : "double",
        "description" : "Percentage value",
        "example" : 0.65
      },
      "numberType" : {
        "type" : "string",
        "description" : "type of a number",
        "enum" : [ "Percentage", "Number" ]
      },
      "date" : {
        "type" : "string",
        "format" : "date",
        "description" : "refers to a date in the format YYYY-MM-DD"
      },
      "dateExtended" : {
        "type" : "string",
        "format" : "date-time",
        "description" : "refers to a date in the format YYYY-MM-DD HH:MM:SS"
      },
      "dateExtendedOffset" : {
        "type" : "string",
        "format" : "date-time",
        "description" : "refers to a date in the format YYYY-MM-DD HH:MM:SS with offset (+/- HH:MM) from Central European Time (CET) or Central European Summer Time ()CEST)."
      },
      "currencyCode" : {
        "type" : "string",
        "description" : "The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount",
        "enum" : [ "AED", "AMD", "ANG", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BEF", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYB", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DEM", "DJF", "DKK", "DOP", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "FRF", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "ITL", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NLG", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "ROL", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU", "UYW", "UZS", "VEB", "VES", "VND", "VUV", "WST", "XAF", "XAU", "XCD", "XDR", "XOF", "XPF", "XSU", "XUA", "YER", "ZAR", "ZMW", "ZWL" ],
        "pattern" : "^[A-Z]{3}$",
        "example" : "EUR"
      },
      "countryCode" : {
        "type" : "string",
        "description" : "The alpha-2 code (complying with ISO ISO_3166-1_alpha-2) of the country",
        "enum" : [ "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "CV", "KH", "CM", "CA", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "SZ", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "false", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "US", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW" ],
        "pattern" : "^[A-Z]{2}$",
        "example" : "BE"
      },
      "riskName" : {
        "type" : "string",
        "description" : "represent the category of risk related to a person (i.e. Mifid 2) or related to a portfolio",
        "enum" : [ "Low", "Medium Low", "Medium", "Medium High", "High" ],
        "example" : "Medium"
      },
      "systemName" : {
        "type" : "string",
        "description" : "defines the name of the system",
        "default" : "Cool",
        "enum" : [ "Cool" ],
        "example" : "Cool"
      },
      "dbStatus" : {
        "type" : "string",
        "description" : "Defines whether the instance is considered as active or inactive in the COOL system",
        "default" : "Active",
        "enum" : [ "Active", "Inactive" ],
        "example" : "Active"
      },
      "exclusive" : {
        "type" : "boolean",
        "description" : "Defines a boolean to enforce exclusivity or non-exclusivity of the query parameters provided",
        "default" : true
      },
      "personId" : {
        "type" : "string",
        "description" : "Defines the id of a person. This field is equivalent to the IBBA ID",
        "example" : "113285"
      },
      "iban" : {
        "type" : "string",
        "description" : "an id to a specific portfolio",
        "pattern" : "^([A-Z]{2}[ \\-]?[0-9]{2})(?=(?:[ \\-]?[A-Z0-9]){9,30}$)((?:[ \\-]?[A-Z0-9]{3,5}){2,7})([ \\-]?[A-Z0-9]{1,3})?$",
        "example" : "BE68 5390 0754 7034"
      },
      "requiredAuthenticationMode" : {
        "type" : "string",
        "description" : "Defines the type of authentication used in a signature",
        "enum" : [ "digipass" ],
        "example" : "digipass"
      },
      "envelopeHash" : {
        "type" : "string",
        "description" : "hash code generated based on the content of the envelope to be signed and provided by the CAP when requesting the content of the signature.",
        "example" : "$2a$10$k/HOQfeu4dH5NGppEJptvOmTamFBy5yFs086wubd5w8YyNwM0uK0e"
      },
      "envelopeEncoded" : {
        "type" : "string",
        "description" : "Base64 binary to text encoding of the envelope's content",
        "example" : "ewoJInRyYW5zYWN0aW9uVHlwZSI6ICJPcmRlcl9TdWJtaXNzaW9uIiwKCSJlbnZlbG9wZVRvdGFsIjogNzI0MTMuODksCgkicG9ydGZvbGlvSWJhbiI6ICJCRTY4IDUzOTAgMDc1NCA3MDM0IiwKCSJkYXRlIjogIjIwMTgtMDktMThUMDk6MTQ6MjgiLAoJInRyYW5zYWN0aW9ucyI6IFt7CgkJCSJzZXNzaW9uSWQiOiAyLAoJCQkicG9ydGZvbGlvSWQiOiAiNjc2LTEzNzM5MTUtNzAiLAoJCQkiaW5zdHJ1bWVudElkIjogIkxVMDAzNTU5OTM5NyIsCgkJCSJuYW1lIjogIkRQQU0gR0wgU1RSIEwgTE9XIEEiLAoJCQkibmF0dXJlIjogIkJ1eSIsCgkJCSJ2YWx1ZXMiOiBbewoJCQkJInR5cGUiOiAiTmV0IEFzc2V0IFZhbHVlIiwKCQkJCSJhbW91bnRzIjogW3sKCQkJCQkicXVhbnRpdHkiOiAyNTYyMC41MiwKCQkJCQkidHlwZSI6ICJOdW1iZXIiCgkJCQl9XSwKCQkJCSJjdXJyZW5jeSI6ICJFVVIiCgkJCX1dLAoJCQkiZGF0ZSI6ICIyMDE4LTA5LTE4VDA5OjE0OjI4IgoJCX0sCgkJewoJCQkic2Vzc2lvbklkIjogMiwKCQkJInBvcnRmb2xpb0lkIjogIjY3Ni0xMzczOTE1LTcwIiwKCQkJImluc3RydW1lbnRJZCI6ICJMVTEwNjM4ODYxMDIiLAoJCQkibmFtZSI6ICJTRUxFQ1QgR0wgRkxFWCBBIEQiLAoJCQkibmF0dXJlIjogIkJ1eSIsCgkJCSJ2YWx1ZXMiOiBbewoJCQkJInR5cGUiOiAiTmV0IEFzc2V0IFZhbHVlIiwKCQkJCSJhbW91bnRzIjogW3sKCQkJCQkicXVhbnRpdHkiOiA0MTM0MS4yNSwKCQkJCQkidHlwZSI6ICJOdW1iZXIiCgkJCQl9XSwKCQkJCSJjdXJyZW5jeSI6ICJFVVIiCgkJCX1dLAoJCQkiZGF0ZSI6ICIyMDE4LTA5LTE4VDA5OjE0OjI4IgoJCX0sCgkJewoJCQkic2Vzc2lvbklkIjogMiwKCQkJInBvcnRmb2xpb0lkIjogIjY3Ni0xMzczOTE1LTcwIiwKCQkJImluc3RydW1lbnRJZCI6ICJMVTA3MDYyNzE3NTUiLAoJCQkibmFtZSI6ICJEUEFNIEFTWU0gTCBESVZFUlMgQSIsCgkJCSJuYXR1cmUiOiAiU2VsbCIsCgkJCSJ2YWx1ZXMiOiBbewoJCQkJInR5cGUiOiAiTmV0IEFzc2V0IFZhbHVlIiwKCQkJCSJhbW91bnRzIjogW3sKCQkJCQkicXVhbnRpdHkiOiA1NDUyLjEyLAoJCQkJCSJ0eXBlIjogIk51bWJlciIKCQkJCX1dLAoJCQkJImN1cnJlbmN5IjogIkVVUiIKCQkJfV0sCgkJCSJkYXRlIjogIjIwMTgtMDktMThUMDk6MTQ6MjkiCgkJfQoJXQp9"
      },
      "envelopeTransactionType" : {
        "type" : "string",
        "description" : "type of transaction to be considered in the signature. This is used to define the rules of generation of the Challenges in the signature",
        "enum" : [ "Cash_Transfer", "Beneficiary", "Document", "Order_Submission", "Order_Cancellation" ]
      },
      "signatureCode" : {
        "type" : "string",
        "description" : "code returned by the user to be generated for the signature",
        "example" : "61391202"
      },
      "envelopeTotal" : {
        "type" : "number",
        "description" : "Total value of the transactions performed in the envelope that needs to be signed",
        "example" : 148630.05
      },
      "discount" : {
        "type" : "string",
        "description" : "discount applicable on the calculation of cost & fees on orders",
        "enum" : [ "Free of Charge" ],
        "example" : "Free of Charge"
      },
      "feeApplicable" : {
        "type" : "boolean",
        "description" : "defines if a certain type of fee is applicable"
      },
      "groupCode" : {
        "type" : "string",
        "description" : "code defining the group an entity is part of",
        "example" : "0000"
      },
      "challenges" : {
        "type" : "object",
        "properties" : {
          "challenges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/challenge"
            },
            "minItems" : 1,
            "maxItems" : 3
          }
        }
      },
      "responseMsg" : {
        "type" : "object",
        "required" : [ "details", "status", "title" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code related to the error",
            "example" : "500"
          },
          "code" : {
            "type" : "string",
            "description" : "A code identifying the specific instance of the error (i.e. This is not the HTTP status code)",
            "example" : "invalidAccessToken"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable message that briefly describes the error",
            "example" : "Internal server error"
          },
          "details" : {
            "type" : "string",
            "description" : "A more in-depth, human-readable description of the error and how to resolve it.",
            "example" : "The server ran into an unexpected error and was not able to perform the requested action"
          },
          "link" : {
            "type" : "string",
            "description" : "A URL that the developer can use to learn more about the issue (e.g. link to the documentation)"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/errorExtended"
            }
          }
        }
      },
      "errorBasic" : {
        "type" : "object",
        "required" : [ "details", "status", "title" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code related to the error",
            "example" : "500"
          },
          "code" : {
            "type" : "string",
            "description" : "A code identifying the specific instance of the error (i.e. This is not the HTTP status code)",
            "example" : "invalidAccessToken"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable message that briefly describes the error",
            "example" : "Internal server error"
          },
          "details" : {
            "type" : "string",
            "description" : "A more in-depth, human-readable description of the error and how to resolve it.",
            "example" : "The server ran into an unexpected error and was not able to perform the requested action"
          },
          "link" : {
            "type" : "string",
            "description" : "A URL that the developer can use to learn more about the issue (e.g. link to the documentation)"
          }
        }
      },
      "errorExtended" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : "The name of the service, class or other identifier for where the error occured to better provide an understanding of what the issue was",
            "enum" : [ "CH", "CRM", "PO", "CF", "IAM", "PB", "FS", "BK", "FM", "EX" ],
            "example" : "CH"
          },
          "capability" : {
            "type" : "string",
            "description" : "The name of the service, class or other identifier for where the error occured to better provide an understanding of what the issue was",
            "example" : "Mifid 2"
          },
          "reasonCode" : {
            "type" : "string",
            "description" : "A code identifying the specific instance of the error (i.e. This is not the HTTP status code)",
            "example" : "invalidAccessToken"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/errorExtendedMessages"
            }
          },
          "extendedHelp" : {
            "type" : "string",
            "description" : "A URL that the developer can use to learn more about the issue (e.g. link to the documentation)"
          }
        }
      },
      "errorExtendedMessages" : {
        "type" : "string",
        "description" : "A description of the error in a human-readable format"
      }
    }
  }
}